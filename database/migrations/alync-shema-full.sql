-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.activity_logs (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  company_id uuid,
  user_id uuid,
  action text NOT NULL,
  action_category text CHECK (action_category = ANY (ARRAY['auth'::text, 'billing'::text, 'service'::text, 'support'::text, 'admin'::text, 'system'::text])),
  entity_type text,
  entity_id uuid,
  description text,
  details jsonb DEFAULT '{}'::jsonb,
  ip_address inet,
  user_agent text,
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  status text DEFAULT 'success'::text CHECK (status = ANY (ARRAY['success'::text, 'failed'::text, 'pending'::text, 'warning'::text])),
  severity_level text DEFAULT 'info'::text CHECK (severity_level = ANY (ARRAY['info'::text, 'warning'::text, 'error'::text, 'critical'::text])),
  changed_data jsonb DEFAULT '{}'::jsonb,
  session_id text,
  device_type text CHECK (device_type IS NULL OR (device_type = ANY (ARRAY['desktop'::text, 'mobile'::text, 'tablet'::text, 'unknown'::text]))),
  browser text,
  location_data jsonb DEFAULT '{}'::jsonb,
  error_message text,
  duration_ms integer,
  tags ARRAY,
  CONSTRAINT activity_logs_pkey PRIMARY KEY (id),
  CONSTRAINT activity_logs_company_id_fkey FOREIGN KEY (company_id) REFERENCES public.companies(id),
  CONSTRAINT activity_logs_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.appointment_actions_log (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  appointment_id uuid,
  company_id text NOT NULL,
  action_type text NOT NULL,
  action_by text NOT NULL,
  action_by_name text,
  action_by_role text,
  old_values jsonb,
  new_values jsonb,
  notes text,
  ip_address text,
  user_agent text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT appointment_actions_log_pkey PRIMARY KEY (id),
  CONSTRAINT appointment_actions_log_appointment_id_fkey FOREIGN KEY (appointment_id) REFERENCES public.appointment_requests(id)
);
CREATE TABLE public.appointment_metrics (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  company_id text NOT NULL,
  metric_date date NOT NULL,
  total_requests integer DEFAULT 0,
  pending_count integer DEFAULT 0,
  approved_count integer DEFAULT 0,
  rejected_count integer DEFAULT 0,
  completed_count integer DEFAULT 0,
  cancelled_count integer DEFAULT 0,
  no_show_count integer DEFAULT 0,
  whatsapp_count integer DEFAULT 0,
  web_count integer DEFAULT 0,
  manual_count integer DEFAULT 0,
  avg_response_time_minutes numeric,
  avg_ai_confidence numeric,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT appointment_metrics_pkey PRIMARY KEY (id)
);
CREATE TABLE public.appointment_reminders (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  appointment_id uuid,
  company_id text NOT NULL,
  reminder_type text,
  reminder_time timestamp with time zone NOT NULL,
  sent_at timestamp with time zone,
  status text DEFAULT 'pending'::text,
  message_content text,
  error_message text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT appointment_reminders_pkey PRIMARY KEY (id),
  CONSTRAINT appointment_reminders_appointment_id_fkey FOREIGN KEY (appointment_id) REFERENCES public.appointment_requests(id)
);
CREATE TABLE public.appointment_requests (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  company_id text NOT NULL,
  customer_name text NOT NULL,
  customer_phone text NOT NULL,
  customer_email text,
  whatsapp_customer_id text,
  whatsapp_session_id text,
  whatsapp_message_id text,
  appointment_type text,
  appointment_reason text NOT NULL,
  requested_date date NOT NULL,
  requested_time time without time zone NOT NULL,
  duration_minutes integer DEFAULT 60,
  location text,
  notes text,
  assigned_to_staff_id uuid,
  assigned_department text,
  status text DEFAULT 'pending'::text,
  google_event_id text,
  calendar_event_link text,
  google_meet_link text,
  n8n_execution_id text,
  n8n_workflow_status text,
  ai_parsed_data jsonb,
  ai_confidence_score numeric,
  created_by text,
  created_by_name text,
  approved_by text,
  approved_by_name text,
  rejected_by text,
  rejected_by_name text,
  cancelled_by text,
  cancelled_by_name text,
  requested_at timestamp with time zone DEFAULT now(),
  approved_at timestamp with time zone,
  rejected_at timestamp with time zone,
  completed_at timestamp with time zone,
  cancelled_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT appointment_requests_pkey PRIMARY KEY (id)
);
CREATE TABLE public.appointment_types (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  company_id text NOT NULL,
  name text NOT NULL,
  description text,
  duration_minutes integer DEFAULT 60,
  color text,
  requires_approval boolean DEFAULT true,
  ai_keywords ARRAY,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT appointment_types_pkey PRIMARY KEY (id)
);
CREATE TABLE public.blocked_time_slots (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  company_id text NOT NULL,
  staff_id uuid,
  blocked_date date NOT NULL,
  start_time time without time zone NOT NULL,
  end_time time without time zone NOT NULL,
  reason text,
  is_recurring boolean DEFAULT false,
  recurrence_rule text,
  created_at timestamp with time zone DEFAULT now(),
  created_by text,
  CONSTRAINT blocked_time_slots_pkey PRIMARY KEY (id),
  CONSTRAINT blocked_time_slots_staff_id_fkey FOREIGN KEY (staff_id) REFERENCES public.calendar_staff(id)
);
CREATE TABLE public.calendar_instances (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  company_id text NOT NULL,
  google_calendar_id text,
  calendar_name text,
  timezone text DEFAULT 'UTC'::text,
  business_hours jsonb,
  auto_approve_appointments boolean DEFAULT false,
  status text DEFAULT 'active'::text,
  settings jsonb,
  n8n_workflow_id text,
  n8n_webhook_url text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  created_by text,
  updated_by text,
  instance_name character varying DEFAULT 'Main Calendar'::character varying,
  CONSTRAINT calendar_instances_pkey PRIMARY KEY (id)
);
CREATE TABLE public.calendar_staff (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  company_id text NOT NULL,
  name text NOT NULL,
  email text,
  phone text,
  department text,
  role text,
  availability jsonb,
  max_daily_appointments integer DEFAULT 20,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  created_by text,
  updated_by text,
  CONSTRAINT calendar_staff_pkey PRIMARY KEY (id)
);
CREATE TABLE public.companies (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name text NOT NULL,
  email text NOT NULL UNIQUE,
  phone text,
  country text NOT NULL DEFAULT 'TR'::text,
  logo_url text,
  status text NOT NULL DEFAULT 'active'::text CHECK (status = ANY (ARRAY['active'::text, 'suspended'::text, 'maintenance'::text])),
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  website text,
  address text,
  city text,
  postal_code text,
  tax_id text,
  registration_number text,
  billing_email text,
  payment_gateway text CHECK (payment_gateway = ANY (ARRAY['paytr'::text, 'stripe'::text, 'qpay'::text, 'tappay'::text])),
  state text,
  vat_number text,
  contact_person text,
  contact_title text,
  CONSTRAINT companies_pkey PRIMARY KEY (id)
);
CREATE TABLE public.company_daily_metrics (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  company_id uuid NOT NULL,
  metric_date date NOT NULL,
  active_users integer DEFAULT 0,
  new_users integer DEFAULT 0,
  total_api_calls integer DEFAULT 0,
  total_messages_sent integer DEFAULT 0,
  total_storage_used_gb numeric DEFAULT 0,
  tickets_created integer DEFAULT 0,
  tickets_resolved integer DEFAULT 0,
  avg_resolution_time interval,
  revenue_generated numeric DEFAULT 0,
  invoices_paid integer DEFAULT 0,
  session_count integer DEFAULT 0,
  avg_session_duration interval,
  page_views integer DEFAULT 0,
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT company_daily_metrics_pkey PRIMARY KEY (id),
  CONSTRAINT company_daily_metrics_company_id_fkey FOREIGN KEY (company_id) REFERENCES public.companies(id)
);
CREATE TABLE public.company_service_pricing (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  company_id uuid NOT NULL,
  service_type_id uuid NOT NULL,
  package text NOT NULL CHECK (package = ANY (ARRAY['basic'::text, 'standard'::text, 'premium'::text])),
  price numeric NOT NULL,
  currency text NOT NULL DEFAULT 'USD'::text,
  period text NOT NULL DEFAULT 'month'::text CHECK (period = ANY (ARRAY['month'::text, 'year'::text, 'one-time'::text])),
  custom_features_en ARRAY,
  custom_features_tr ARRAY,
  custom_limits jsonb DEFAULT '{}'::jsonb,
  notes text,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT company_service_pricing_pkey PRIMARY KEY (id),
  CONSTRAINT company_service_pricing_company_id_fkey FOREIGN KEY (company_id) REFERENCES public.companies(id),
  CONSTRAINT company_service_pricing_service_type_id_fkey FOREIGN KEY (service_type_id) REFERENCES public.service_types(id)
);
CREATE TABLE public.company_services (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  company_id uuid NOT NULL,
  service_type_id uuid NOT NULL,
  package text NOT NULL DEFAULT 'basic'::text CHECK (package = ANY (ARRAY['basic'::text, 'pro'::text, 'premium'::text, 'custom'::text])),
  status text NOT NULL DEFAULT 'active'::text CHECK (status = ANY (ARRAY['active'::text, 'suspended'::text, 'inactive'::text, 'maintenance'::text])),
  start_date date NOT NULL DEFAULT CURRENT_DATE,
  end_date date,
  next_billing_date date,
  usage_limits jsonb DEFAULT '{}'::jsonb,
  current_usage jsonb DEFAULT '{}'::jsonb,
  metadata jsonb DEFAULT '{}'::jsonb,
  price_amount numeric,
  price_currency text DEFAULT 'USD'::text CHECK (price_currency = 'USD'::text),
  billing_cycle text CHECK (billing_cycle = ANY (ARRAY['monthly'::text, 'yearly'::text, 'one-time'::text])),
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT company_services_pkey PRIMARY KEY (id),
  CONSTRAINT company_services_company_id_fkey FOREIGN KEY (company_id) REFERENCES public.companies(id),
  CONSTRAINT company_services_service_type_id_fkey FOREIGN KEY (service_type_id) REFERENCES public.service_types(id)
);
CREATE TABLE public.docs_instances (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  company_id text NOT NULL,
  google_drive_folder_id text,
  google_drive_folder_name text,
  google_credentials_encrypted text,
  whatsapp_integration_enabled boolean DEFAULT true,
  auto_generate_enabled boolean DEFAULT true,
  default_template_id text,
  n8n_workflow_id text,
  n8n_webhook_url text,
  status text DEFAULT 'active'::text,
  error_message text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  created_by text,
  updated_by text,
  instance_name character varying DEFAULT 'Main Docs'::character varying,
  CONSTRAINT docs_instances_pkey PRIMARY KEY (id)
);
CREATE TABLE public.docs_metrics (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  company_id text NOT NULL,
  metric_date date NOT NULL,
  documents_created integer DEFAULT 0,
  documents_shared integer DEFAULT 0,
  whatsapp_requests integer DEFAULT 0,
  total_word_count integer DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT docs_metrics_pkey PRIMARY KEY (id)
);
CREATE TABLE public.document_actions_log (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  document_id uuid,
  company_id text NOT NULL,
  action_type text NOT NULL,
  action_by text NOT NULL,
  action_by_name text,
  details jsonb,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT document_actions_log_pkey PRIMARY KEY (id),
  CONSTRAINT document_actions_log_document_id_fkey FOREIGN KEY (document_id) REFERENCES public.generated_documents(id)
);
CREATE TABLE public.document_requests (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  company_id text NOT NULL,
  docs_instance_id uuid,
  whatsapp_customer_id text,
  whatsapp_session_id text,
  whatsapp_message_id text,
  customer_phone text NOT NULL,
  customer_name text,
  request_type text NOT NULL,
  request_text text NOT NULL,
  ai_parsed_request jsonb,
  ai_confidence numeric,
  document_type text,
  document_title text,
  document_instructions text,
  bot_response text,
  generated_document_id uuid,
  n8n_execution_id text,
  status text DEFAULT 'completed'::text,
  error_message text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT document_requests_pkey PRIMARY KEY (id),
  CONSTRAINT document_requests_docs_instance_id_fkey FOREIGN KEY (docs_instance_id) REFERENCES public.docs_instances(id),
  CONSTRAINT document_requests_generated_document_id_fkey FOREIGN KEY (generated_document_id) REFERENCES public.generated_documents(id)
);
CREATE TABLE public.document_templates (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  company_id text NOT NULL,
  template_name text NOT NULL,
  template_type text,
  template_content text NOT NULL,
  variables jsonb,
  google_doc_template_id text,
  usage_count integer DEFAULT 0,
  last_used_at timestamp with time zone,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT document_templates_pkey PRIMARY KEY (id)
);
CREATE TABLE public.drive_actions_log (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  drive_file_id uuid,
  company_id text NOT NULL,
  action_type text NOT NULL,
  action_by text NOT NULL,
  action_by_name text,
  details jsonb,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT drive_actions_log_pkey PRIMARY KEY (id),
  CONSTRAINT drive_actions_log_drive_file_id_fkey FOREIGN KEY (drive_file_id) REFERENCES public.drive_files(id)
);
CREATE TABLE public.drive_files (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  company_id text NOT NULL,
  drive_instance_id uuid,
  google_file_id text NOT NULL,
  google_file_name text NOT NULL,
  google_file_url text,
  google_file_type text,
  mime_type text,
  file_size_bytes bigint,
  file_extension text,
  parent_folder_id text,
  parent_folder_name text,
  folder_path text,
  description text,
  tags ARRAY,
  whatsapp_customer_id text,
  whatsapp_session_id text,
  whatsapp_message_id text,
  customer_phone text,
  uploaded_via_whatsapp boolean DEFAULT false,
  is_shared boolean DEFAULT false,
  shared_with ARRAY,
  share_link text,
  share_permissions text,
  ai_summary text,
  ai_tags ARRAY,
  ocr_text text,
  n8n_execution_id text,
  status text DEFAULT 'active'::text,
  is_deleted boolean DEFAULT false,
  google_created_at timestamp with time zone,
  google_modified_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT drive_files_pkey PRIMARY KEY (id),
  CONSTRAINT drive_files_drive_instance_id_fkey FOREIGN KEY (drive_instance_id) REFERENCES public.drive_instances(id)
);
CREATE TABLE public.drive_folders (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  company_id text NOT NULL,
  drive_instance_id uuid,
  google_folder_id text NOT NULL,
  folder_name text NOT NULL,
  parent_folder_id text,
  folder_path text,
  files_count integer DEFAULT 0,
  total_size_bytes bigint DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT drive_folders_pkey PRIMARY KEY (id),
  CONSTRAINT drive_folders_drive_instance_id_fkey FOREIGN KEY (drive_instance_id) REFERENCES public.drive_instances(id)
);
CREATE TABLE public.drive_instances (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  company_id text NOT NULL,
  google_drive_email text NOT NULL,
  root_folder_id text,
  root_folder_name text,
  google_credentials_encrypted text,
  whatsapp_integration_enabled boolean DEFAULT true,
  auto_organize_enabled boolean DEFAULT true,
  organization_rules jsonb,
  n8n_workflow_id text,
  n8n_webhook_url text,
  auto_sync_enabled boolean DEFAULT true,
  sync_interval_minutes integer DEFAULT 30,
  last_sync_at timestamp with time zone,
  status text DEFAULT 'active'::text,
  error_message text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  created_by text,
  updated_by text,
  instance_name character varying DEFAULT 'Main Drive'::character varying,
  CONSTRAINT drive_instances_pkey PRIMARY KEY (id)
);
CREATE TABLE public.drive_metrics (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  company_id text NOT NULL,
  metric_date date NOT NULL,
  files_uploaded integer DEFAULT 0,
  files_downloaded integer DEFAULT 0,
  files_shared integer DEFAULT 0,
  files_deleted integer DEFAULT 0,
  whatsapp_uploads integer DEFAULT 0,
  total_storage_bytes bigint DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT drive_metrics_pkey PRIMARY KEY (id)
);
CREATE TABLE public.drive_requests (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  company_id text NOT NULL,
  drive_instance_id uuid,
  whatsapp_customer_id text,
  whatsapp_session_id text,
  whatsapp_message_id text,
  customer_phone text NOT NULL,
  customer_name text,
  request_type text NOT NULL,
  request_text text NOT NULL,
  ai_parsed_request jsonb,
  ai_confidence numeric,
  uploaded_file_id uuid,
  search_query text,
  search_results_count integer,
  search_results jsonb,
  bot_response text,
  n8n_execution_id text,
  status text DEFAULT 'completed'::text,
  error_message text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT drive_requests_pkey PRIMARY KEY (id),
  CONSTRAINT drive_requests_drive_instance_id_fkey FOREIGN KEY (drive_instance_id) REFERENCES public.drive_instances(id),
  CONSTRAINT drive_requests_uploaded_file_id_fkey FOREIGN KEY (uploaded_file_id) REFERENCES public.drive_files(id)
);
CREATE TABLE public.generated_documents (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  company_id text NOT NULL,
  docs_instance_id uuid,
  google_doc_id text NOT NULL,
  google_doc_url text NOT NULL,
  google_doc_name text NOT NULL,
  document_type text,
  document_title text,
  document_content text,
  word_count integer,
  whatsapp_customer_id text,
  whatsapp_session_id text,
  whatsapp_message_id text,
  customer_phone text,
  customer_name text,
  request_text text,
  ai_prompt text,
  ai_generated_content text,
  ai_model text,
  ai_confidence numeric,
  template_used text,
  variables_used jsonb,
  is_shared boolean DEFAULT false,
  shared_with ARRAY,
  share_link text,
  n8n_execution_id text,
  status text DEFAULT 'completed'::text,
  error_message text,
  generated_at timestamp with time zone DEFAULT now(),
  last_modified_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT generated_documents_pkey PRIMARY KEY (id),
  CONSTRAINT generated_documents_docs_instance_id_fkey FOREIGN KEY (docs_instance_id) REFERENCES public.docs_instances(id)
);
CREATE TABLE public.gmail_actions_log (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  gmail_message_id uuid,
  company_id text NOT NULL,
  action_type text NOT NULL,
  action_by text NOT NULL,
  action_by_name text,
  action_by_role text,
  details jsonb,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT gmail_actions_log_pkey PRIMARY KEY (id),
  CONSTRAINT gmail_actions_log_gmail_message_id_fkey FOREIGN KEY (gmail_message_id) REFERENCES public.gmail_messages(id)
);
CREATE TABLE public.gmail_instances (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  company_id text NOT NULL,
  gmail_address text NOT NULL,
  gmail_account_name text,
  google_credentials_encrypted text,
  access_token_encrypted text,
  refresh_token_encrypted text,
  token_expires_at timestamp with time zone,
  auto_reply_enabled boolean DEFAULT false,
  auto_reply_template text,
  whatsapp_integration_enabled boolean DEFAULT true,
  allowed_senders ARRAY,
  blocked_senders ARRAY,
  allowed_domains ARRAY,
  n8n_workflow_id text,
  n8n_webhook_url text,
  auto_sync_enabled boolean DEFAULT true,
  sync_interval_minutes integer DEFAULT 5,
  last_sync_at timestamp with time zone,
  next_sync_at timestamp with time zone,
  status text DEFAULT 'active'::text,
  error_message text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  created_by text,
  updated_by text,
  instance_name character varying DEFAULT 'Main Gmail'::character varying,
  CONSTRAINT gmail_instances_pkey PRIMARY KEY (id)
);
CREATE TABLE public.gmail_messages (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  company_id text NOT NULL,
  gmail_instance_id uuid,
  gmail_message_id text NOT NULL,
  gmail_thread_id text,
  from_email text NOT NULL,
  from_name text,
  to_emails ARRAY NOT NULL,
  cc_emails ARRAY,
  bcc_emails ARRAY,
  subject text,
  body_text text,
  body_html text,
  has_attachments boolean DEFAULT false,
  attachments_count integer DEFAULT 0,
  attachments_info jsonb,
  gmail_labels ARRAY,
  is_read boolean DEFAULT false,
  is_starred boolean DEFAULT false,
  is_important boolean DEFAULT false,
  whatsapp_customer_id text,
  whatsapp_session_id text,
  whatsapp_message_id text,
  customer_phone text,
  direction text,
  ai_summary text,
  ai_intent text,
  ai_sentiment text,
  ai_priority text,
  n8n_execution_id text,
  status text DEFAULT 'delivered'::text,
  error_message text,
  gmail_sent_at timestamp with time zone,
  gmail_received_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT gmail_messages_pkey PRIMARY KEY (id),
  CONSTRAINT gmail_messages_gmail_instance_id_fkey FOREIGN KEY (gmail_instance_id) REFERENCES public.gmail_instances(id)
);
CREATE TABLE public.gmail_metrics (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  company_id text NOT NULL,
  metric_date date NOT NULL,
  emails_received integer DEFAULT 0,
  emails_sent integer DEFAULT 0,
  emails_read integer DEFAULT 0,
  whatsapp_requests integer DEFAULT 0,
  avg_response_time_minutes numeric,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT gmail_metrics_pkey PRIMARY KEY (id)
);
CREATE TABLE public.gmail_requests (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  company_id text NOT NULL,
  gmail_instance_id uuid,
  whatsapp_customer_id text,
  whatsapp_session_id text,
  whatsapp_message_id text,
  customer_phone text NOT NULL,
  customer_name text,
  request_type text NOT NULL,
  request_text text NOT NULL,
  ai_parsed_request jsonb,
  ai_confidence numeric,
  to_email text,
  subject text,
  body text,
  search_query text,
  search_results_count integer,
  bot_response text,
  gmail_message_id uuid,
  n8n_execution_id text,
  status text DEFAULT 'completed'::text,
  error_message text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT gmail_requests_pkey PRIMARY KEY (id),
  CONSTRAINT gmail_requests_gmail_instance_id_fkey FOREIGN KEY (gmail_instance_id) REFERENCES public.gmail_instances(id),
  CONSTRAINT gmail_requests_gmail_message_id_fkey FOREIGN KEY (gmail_message_id) REFERENCES public.gmail_messages(id)
);
CREATE TABLE public.gmail_templates (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  company_id text NOT NULL,
  template_name text NOT NULL,
  template_subject text,
  template_body text NOT NULL,
  variables jsonb,
  usage_count integer DEFAULT 0,
  last_used_at timestamp with time zone,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT gmail_templates_pkey PRIMARY KEY (id)
);
CREATE TABLE public.instagram_comments (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  company_id uuid NOT NULL,
  instance_id uuid NOT NULL,
  post_id uuid NOT NULL,
  comment_id character varying NOT NULL UNIQUE,
  parent_comment_id character varying,
  user_id character varying NOT NULL,
  username character varying NOT NULL,
  comment_text text NOT NULL,
  bot_response text,
  sentiment character varying,
  is_bot_reply boolean DEFAULT false,
  is_filtered boolean DEFAULT false,
  filter_reason character varying,
  created_at timestamp with time zone DEFAULT now(),
  responded_at timestamp with time zone,
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT instagram_comments_pkey PRIMARY KEY (id),
  CONSTRAINT instagram_comments_instance_id_fkey FOREIGN KEY (instance_id) REFERENCES public.instagram_instances(id),
  CONSTRAINT instagram_comments_company_id_fkey FOREIGN KEY (company_id) REFERENCES public.companies(id),
  CONSTRAINT instagram_comments_post_id_fkey FOREIGN KEY (post_id) REFERENCES public.instagram_posts(id)
);
CREATE TABLE public.instagram_dm_messages (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  session_id uuid NOT NULL,
  company_id uuid NOT NULL,
  message_id character varying UNIQUE,
  sender character varying NOT NULL CHECK (sender::text = ANY (ARRAY['customer'::character varying, 'bot'::character varying, 'agent'::character varying]::text[])),
  sender_name character varying,
  message_text text NOT NULL,
  message_owner character varying CHECK (message_owner::text = ANY (ARRAY['incoming'::character varying, 'outgoing'::character varying]::text[])),
  message_type character varying DEFAULT 'text'::character varying CHECK (message_type::text = ANY (ARRAY['text'::character varying, 'image'::character varying, 'video'::character varying, 'audio'::character varying, 'link'::character varying]::text[])),
  media_url text,
  timestamp timestamp with time zone DEFAULT now(),
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT instagram_dm_messages_pkey PRIMARY KEY (id),
  CONSTRAINT instagram_dm_messages_session_id_fkey FOREIGN KEY (session_id) REFERENCES public.instagram_dm_sessions(id),
  CONSTRAINT instagram_dm_messages_company_id_fkey FOREIGN KEY (company_id) REFERENCES public.companies(id)
);
CREATE TABLE public.instagram_dm_sessions (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  company_id uuid NOT NULL,
  instance_id uuid NOT NULL,
  user_id character varying NOT NULL,
  username character varying NOT NULL,
  profile_picture_url text,
  last_message text,
  last_message_time timestamp with time zone,
  unread_count integer DEFAULT 0,
  message_count integer DEFAULT 0,
  is_active boolean DEFAULT true,
  status character varying DEFAULT 'active'::character varying CHECK (status::text = ANY (ARRAY['active'::character varying, 'closed'::character varying, 'archived'::character varying]::text[])),
  session_start timestamp with time zone DEFAULT now(),
  session_end timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT instagram_dm_sessions_pkey PRIMARY KEY (id),
  CONSTRAINT instagram_dm_sessions_company_id_fkey FOREIGN KEY (company_id) REFERENCES public.companies(id),
  CONSTRAINT instagram_dm_sessions_instance_id_fkey FOREIGN KEY (instance_id) REFERENCES public.instagram_instances(id)
);
CREATE TABLE public.instagram_hourly_metrics (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  company_id uuid NOT NULL,
  instance_id uuid NOT NULL,
  metric_hour timestamp with time zone NOT NULL,
  total_comments integer DEFAULT 0,
  total_dms integer DEFAULT 0,
  bot_responses integer DEFAULT 0,
  avg_response_time integer,
  positive_sentiment integer DEFAULT 0,
  neutral_sentiment integer DEFAULT 0,
  negative_sentiment integer DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT instagram_hourly_metrics_pkey PRIMARY KEY (id),
  CONSTRAINT instagram_hourly_metrics_company_id_fkey FOREIGN KEY (company_id) REFERENCES public.companies(id),
  CONSTRAINT instagram_hourly_metrics_instance_id_fkey FOREIGN KEY (instance_id) REFERENCES public.instagram_instances(id)
);
CREATE TABLE public.instagram_instances (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  company_id uuid NOT NULL,
  instance_id character varying NOT NULL UNIQUE,
  instagram_account_id character varying NOT NULL,
  username character varying NOT NULL,
  profile_picture_url text,
  status character varying DEFAULT 'active'::character varying CHECK (status::text = ANY (ARRAY['active'::character varying, 'inactive'::character varying, 'suspended'::character varying, 'disconnected'::character varying]::text[])),
  is_connected boolean DEFAULT false,
  last_connected_at timestamp with time zone,
  access_token text,
  webhook_url text,
  settings jsonb DEFAULT '{"filter_spam": true, "dm_auto_reply": true, "response_language": "en", "comment_auto_reply": true}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  instance_name character varying,
  CONSTRAINT instagram_instances_pkey PRIMARY KEY (id),
  CONSTRAINT instagram_instances_company_id_fkey FOREIGN KEY (company_id) REFERENCES public.companies(id)
);
CREATE TABLE public.instagram_metrics (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  company_id uuid NOT NULL,
  instance_id uuid NOT NULL,
  metric_date date NOT NULL,
  total_comments integer DEFAULT 0,
  bot_comment_responses integer DEFAULT 0,
  total_dms integer DEFAULT 0,
  bot_dm_responses integer DEFAULT 0,
  avg_comment_response_time integer,
  avg_dm_response_time integer,
  positive_sentiment integer DEFAULT 0,
  neutral_sentiment integer DEFAULT 0,
  negative_sentiment integer DEFAULT 0,
  total_posts_commented integer DEFAULT 0,
  active_dm_sessions integer DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT instagram_metrics_pkey PRIMARY KEY (id),
  CONSTRAINT instagram_metrics_company_id_fkey FOREIGN KEY (company_id) REFERENCES public.companies(id),
  CONSTRAINT instagram_metrics_instance_id_fkey FOREIGN KEY (instance_id) REFERENCES public.instagram_instances(id)
);
CREATE TABLE public.instagram_posts (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  company_id uuid NOT NULL,
  instance_id uuid NOT NULL,
  post_id character varying NOT NULL UNIQUE,
  media_type character varying,
  caption text,
  image_url text,
  permalink text,
  like_count integer DEFAULT 0,
  comment_count integer DEFAULT 0,
  last_comment_time timestamp with time zone,
  posted_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT instagram_posts_pkey PRIMARY KEY (id),
  CONSTRAINT instagram_posts_company_id_fkey FOREIGN KEY (company_id) REFERENCES public.companies(id),
  CONSTRAINT instagram_posts_instance_id_fkey FOREIGN KEY (instance_id) REFERENCES public.instagram_instances(id)
);
CREATE TABLE public.instagram_user_profiles (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  company_id uuid NOT NULL,
  user_id character varying NOT NULL,
  username character varying NOT NULL,
  profile_picture_url text,
  full_name character varying,
  bio text,
  follower_count integer,
  following_count integer,
  tags ARRAY,
  total_comments integer DEFAULT 0,
  total_dms integer DEFAULT 0,
  last_interaction timestamp with time zone,
  customer_status character varying DEFAULT 'active'::character varying CHECK (customer_status::text = ANY (ARRAY['active'::character varying, 'inactive'::character varying, 'blocked'::character varying]::text[])),
  notes text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT instagram_user_profiles_pkey PRIMARY KEY (id),
  CONSTRAINT instagram_user_profiles_company_id_fkey FOREIGN KEY (company_id) REFERENCES public.companies(id)
);
CREATE TABLE public.invoice_items (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  invoice_id uuid NOT NULL,
  service_type_id uuid,
  description_tr text NOT NULL,
  description_en text NOT NULL,
  quantity numeric DEFAULT 1,
  unit_price numeric NOT NULL,
  discount_amount numeric DEFAULT 0,
  total_amount numeric NOT NULL,
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT invoice_items_pkey PRIMARY KEY (id),
  CONSTRAINT invoice_items_invoice_id_fkey FOREIGN KEY (invoice_id) REFERENCES public.invoices(id),
  CONSTRAINT invoice_items_service_type_id_fkey FOREIGN KEY (service_type_id) REFERENCES public.service_types(id)
);
CREATE TABLE public.invoices (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  company_id uuid NOT NULL,
  invoice_number text NOT NULL UNIQUE,
  subtotal numeric NOT NULL DEFAULT 0,
  tax_rate numeric DEFAULT 0,
  tax_amount numeric DEFAULT 0,
  discount_amount numeric DEFAULT 0,
  total_amount numeric NOT NULL,
  currency text NOT NULL DEFAULT 'USD'::text CHECK (currency = 'USD'::text),
  status text NOT NULL DEFAULT 'pending'::text CHECK (status = ANY (ARRAY['draft'::text, 'pending'::text, 'paid'::text, 'failed'::text, 'refunded'::text, 'cancelled'::text])),
  issue_date date NOT NULL DEFAULT CURRENT_DATE,
  due_date date NOT NULL,
  paid_at timestamp with time zone,
  payment_gateway text CHECK (payment_gateway = ANY (ARRAY['paytr'::text, 'stripe'::text, 'qtap'::text, 'bank_transfer'::text, 'cash'::text])),
  gateway_customer_id text,
  gateway_payment_id text,
  pdf_url text,
  notes text,
  internal_notes text,
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT invoices_pkey PRIMARY KEY (id),
  CONSTRAINT invoices_company_id_fkey FOREIGN KEY (company_id) REFERENCES public.companies(id)
);
CREATE TABLE public.maintenance_windows (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  scheduled_by uuid NOT NULL,
  start_time timestamp with time zone NOT NULL,
  end_time timestamp with time zone NOT NULL,
  message_tr text NOT NULL,
  message_en text NOT NULL,
  affected_services ARRAY,
  is_active boolean DEFAULT true,
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT maintenance_windows_pkey PRIMARY KEY (id),
  CONSTRAINT maintenance_windows_scheduled_by_fkey FOREIGN KEY (scheduled_by) REFERENCES public.profiles(id)
);
CREATE TABLE public.mobile_app_milestones (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  project_id uuid,
  title character varying NOT NULL,
  status character varying DEFAULT 'pending'::character varying CHECK (status::text = ANY (ARRAY['completed'::character varying, 'in-progress'::character varying, 'pending'::character varying, 'blocked'::character varying]::text[])),
  progress integer DEFAULT 0 CHECK (progress >= 0 AND progress <= 100),
  notes text,
  completed_date date,
  display_order integer DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT mobile_app_milestones_pkey PRIMARY KEY (id),
  CONSTRAINT mobile_app_milestones_project_id_fkey FOREIGN KEY (project_id) REFERENCES public.mobile_app_projects(id)
);
CREATE TABLE public.mobile_app_projects (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  company_id uuid,
  platform character varying NOT NULL CHECK (platform::text = ANY (ARRAY['android'::character varying, 'ios'::character varying, 'both'::character varying]::text[])),
  app_name character varying NOT NULL,
  package_name character varying,
  bundle_id character varying,
  play_store_status character varying CHECK (play_store_status::text = ANY (ARRAY['pending'::character varying, 'submitted'::character varying, 'in-review'::character varying, 'approved'::character varying, 'published'::character varying, 'rejected'::character varying]::text[])),
  play_store_url text,
  app_store_status character varying CHECK (app_store_status::text = ANY (ARRAY['pending'::character varying, 'submitted'::character varying, 'in-review'::character varying, 'approved'::character varying, 'published'::character varying, 'rejected'::character varying]::text[])),
  app_store_url text,
  estimated_completion date,
  overall_progress integer DEFAULT 0 CHECK (overall_progress >= 0 AND overall_progress <= 100),
  status character varying DEFAULT 'active'::character varying CHECK (status::text = ANY (ARRAY['active'::character varying, 'paused'::character varying, 'completed'::character varying, 'cancelled'::character varying]::text[])),
  last_update timestamp with time zone DEFAULT now(),
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  project_name character varying DEFAULT 'Main App'::character varying,
  CONSTRAINT mobile_app_projects_pkey PRIMARY KEY (id),
  CONSTRAINT mobile_app_projects_company_id_fkey FOREIGN KEY (company_id) REFERENCES public.companies(id)
);
CREATE TABLE public.notifications (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  company_id uuid,
  user_id uuid,
  type text NOT NULL CHECK (type = ANY (ARRAY['info'::text, 'warning'::text, 'error'::text, 'success'::text, 'maintenance'::text, 'billing'::text, 'feature'::text])),
  priority text NOT NULL DEFAULT 'normal'::text CHECK (priority = ANY (ARRAY['low'::text, 'normal'::text, 'high'::text, 'urgent'::text])),
  title_tr text NOT NULL,
  title_en text NOT NULL,
  message_tr text NOT NULL,
  message_en text NOT NULL,
  action_url text,
  action_label_tr text,
  action_label_en text,
  is_read boolean DEFAULT false,
  is_archived boolean DEFAULT false,
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  read_at timestamp with time zone,
  expires_at timestamp with time zone,
  CONSTRAINT notifications_pkey PRIMARY KEY (id),
  CONSTRAINT notifications_company_id_fkey FOREIGN KEY (company_id) REFERENCES public.companies(id),
  CONSTRAINT notifications_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.payment_sessions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  invoice_id uuid NOT NULL,
  company_id uuid NOT NULL,
  gateway text NOT NULL,
  gateway_session_id text,
  gateway_redirect_url text,
  status text NOT NULL DEFAULT 'created'::text CHECK (status = ANY (ARRAY['created'::text, 'redirected'::text, 'completed'::text, 'expired'::text, 'cancelled'::text])),
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  expires_at timestamp with time zone,
  completed_at timestamp with time zone,
  CONSTRAINT payment_sessions_pkey PRIMARY KEY (id),
  CONSTRAINT payment_sessions_invoice_id_fkey FOREIGN KEY (invoice_id) REFERENCES public.invoices(id),
  CONSTRAINT payment_sessions_company_id_fkey FOREIGN KEY (company_id) REFERENCES public.companies(id)
);
CREATE TABLE public.photo_actions_log (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  photo_id uuid,
  company_id text NOT NULL,
  action_type text NOT NULL,
  action_by text NOT NULL,
  action_by_name text,
  details jsonb,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT photo_actions_log_pkey PRIMARY KEY (id),
  CONSTRAINT photo_actions_log_photo_id_fkey FOREIGN KEY (photo_id) REFERENCES public.photos(id)
);
CREATE TABLE public.photo_albums (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  company_id text NOT NULL,
  photos_instance_id uuid,
  google_album_id text,
  album_name text NOT NULL,
  album_description text,
  cover_photo_id uuid,
  cover_photo_url text,
  photos_count integer DEFAULT 0,
  created_via_whatsapp boolean DEFAULT false,
  customer_phone text,
  is_shared boolean DEFAULT false,
  share_link text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT photo_albums_pkey PRIMARY KEY (id),
  CONSTRAINT photo_albums_photos_instance_id_fkey FOREIGN KEY (photos_instance_id) REFERENCES public.photos_instances(id),
  CONSTRAINT photo_albums_cover_photo_id_fkey FOREIGN KEY (cover_photo_id) REFERENCES public.photos(id)
);
CREATE TABLE public.photo_requests (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  company_id text NOT NULL,
  photos_instance_id uuid,
  whatsapp_customer_id text,
  whatsapp_session_id text,
  whatsapp_message_id text,
  customer_phone text NOT NULL,
  customer_name text,
  request_type text NOT NULL,
  request_text text NOT NULL,
  ai_parsed_request jsonb,
  ai_confidence numeric,
  uploaded_photo_id uuid,
  search_query text,
  search_results_count integer,
  search_results jsonb,
  bot_response text,
  n8n_execution_id text,
  status text DEFAULT 'completed'::text,
  error_message text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT photo_requests_pkey PRIMARY KEY (id),
  CONSTRAINT photo_requests_photos_instance_id_fkey FOREIGN KEY (photos_instance_id) REFERENCES public.photos_instances(id),
  CONSTRAINT photo_requests_uploaded_photo_id_fkey FOREIGN KEY (uploaded_photo_id) REFERENCES public.photos(id)
);
CREATE TABLE public.photos (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  company_id text NOT NULL,
  photos_instance_id uuid,
  google_photo_id text NOT NULL,
  google_photo_url text,
  thumbnail_url text,
  filename text NOT NULL,
  file_size_bytes bigint,
  mime_type text,
  width integer,
  height integer,
  description text,
  tags ARRAY,
  album_id uuid,
  album_name text,
  whatsapp_customer_id text,
  whatsapp_session_id text,
  whatsapp_message_id text,
  customer_phone text,
  customer_name text,
  uploaded_via_whatsapp boolean DEFAULT false,
  ai_description text,
  ai_tags ARRAY,
  ai_objects_detected jsonb,
  ai_text_detected text,
  ai_faces_count integer DEFAULT 0,
  latitude numeric,
  longitude numeric,
  location_name text,
  photo_taken_at timestamp with time zone,
  google_uploaded_at timestamp with time zone,
  n8n_execution_id text,
  status text DEFAULT 'active'::text,
  is_deleted boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT photos_pkey PRIMARY KEY (id),
  CONSTRAINT photos_photos_instance_id_fkey FOREIGN KEY (photos_instance_id) REFERENCES public.photos_instances(id)
);
CREATE TABLE public.photos_instances (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  company_id text NOT NULL,
  google_photos_email text NOT NULL,
  google_credentials_encrypted text,
  whatsapp_integration_enabled boolean DEFAULT true,
  auto_upload_enabled boolean DEFAULT true,
  auto_organize_enabled boolean DEFAULT true,
  create_albums_by_date boolean DEFAULT true,
  create_albums_by_customer boolean DEFAULT false,
  n8n_workflow_id text,
  n8n_webhook_url text,
  status text DEFAULT 'active'::text,
  error_message text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  created_by text,
  updated_by text,
  instance_name character varying DEFAULT 'Main Photos'::character varying,
  CONSTRAINT photos_instances_pkey PRIMARY KEY (id)
);
CREATE TABLE public.photos_metrics (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  company_id text NOT NULL,
  metric_date date NOT NULL,
  photos_uploaded integer DEFAULT 0,
  photos_downloaded integer DEFAULT 0,
  photos_shared integer DEFAULT 0,
  photos_deleted integer DEFAULT 0,
  albums_created integer DEFAULT 0,
  whatsapp_uploads integer DEFAULT 0,
  total_storage_bytes bigint DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT photos_metrics_pkey PRIMARY KEY (id)
);
CREATE TABLE public.profiles (
  id uuid NOT NULL,
  company_id uuid,
  role text NOT NULL DEFAULT 'user'::text CHECK (role = ANY (ARRAY['super_admin'::text, 'company_admin'::text, 'user'::text])),
  full_name text NOT NULL,
  avatar_url text,
  language text NOT NULL DEFAULT 'tr'::text CHECK (language = ANY (ARRAY['tr'::text, 'en'::text])),
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  email text,
  status text DEFAULT 'active'::text,
  last_login timestamp with time zone,
  CONSTRAINT profiles_pkey PRIMARY KEY (id),
  CONSTRAINT profiles_id_fkey FOREIGN KEY (id) REFERENCES auth.users(id),
  CONSTRAINT profiles_company_id_fkey FOREIGN KEY (company_id) REFERENCES public.companies(id)
);
CREATE TABLE public.revenue_metrics (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  metric_date date NOT NULL UNIQUE,
  total_revenue numeric DEFAULT 0,
  recurring_revenue numeric DEFAULT 0,
  one_time_revenue numeric DEFAULT 0,
  new_customers integer DEFAULT 0,
  churned_customers integer DEFAULT 0,
  active_customers integer DEFAULT 0,
  revenue_by_service jsonb DEFAULT '{}'::jsonb,
  revenue_by_country jsonb DEFAULT '{}'::jsonb,
  growth_rate numeric,
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT revenue_metrics_pkey PRIMARY KEY (id)
);
CREATE TABLE public.service_requests (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  company_id uuid NOT NULL,
  service_type_id uuid NOT NULL,
  requested_by uuid NOT NULL,
  package text NOT NULL CHECK (package = ANY (ARRAY['basic'::text, 'pro'::text, 'premium'::text, 'custom'::text])),
  status text NOT NULL DEFAULT 'pending'::text CHECK (status = ANY (ARRAY['pending'::text, 'approved'::text, 'rejected'::text])),
  notes text,
  admin_notes text,
  created_at timestamp with time zone DEFAULT now(),
  reviewed_at timestamp with time zone,
  reviewed_by uuid,
  CONSTRAINT service_requests_pkey PRIMARY KEY (id),
  CONSTRAINT service_requests_company_id_fkey FOREIGN KEY (company_id) REFERENCES public.companies(id),
  CONSTRAINT service_requests_service_type_id_fkey FOREIGN KEY (service_type_id) REFERENCES public.service_types(id),
  CONSTRAINT service_requests_requested_by_fkey FOREIGN KEY (requested_by) REFERENCES public.profiles(id),
  CONSTRAINT service_requests_reviewed_by_fkey FOREIGN KEY (reviewed_by) REFERENCES public.profiles(id)
);
CREATE TABLE public.service_suspension_history (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  company_id uuid NOT NULL,
  service_id uuid NOT NULL,
  suspended_at timestamp with time zone NOT NULL DEFAULT now(),
  suspended_by uuid,
  suspension_reason text NOT NULL,
  invoice_id uuid,
  reactivated_at timestamp with time zone,
  reactivated_by uuid,
  reactivation_reason text,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT service_suspension_history_pkey PRIMARY KEY (id),
  CONSTRAINT service_suspension_history_company_id_fkey FOREIGN KEY (company_id) REFERENCES public.companies(id),
  CONSTRAINT service_suspension_history_service_id_fkey FOREIGN KEY (service_id) REFERENCES public.company_services(id),
  CONSTRAINT service_suspension_history_suspended_by_fkey FOREIGN KEY (suspended_by) REFERENCES public.profiles(id),
  CONSTRAINT service_suspension_history_invoice_id_fkey FOREIGN KEY (invoice_id) REFERENCES public.invoices(id),
  CONSTRAINT service_suspension_history_reactivated_by_fkey FOREIGN KEY (reactivated_by) REFERENCES public.profiles(id)
);
CREATE TABLE public.service_types (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name_tr text NOT NULL,
  name_en text NOT NULL,
  slug text NOT NULL UNIQUE,
  category text NOT NULL CHECK (category = ANY (ARRAY['ai'::text, 'digital'::text])),
  icon text,
  color text,
  description_tr text,
  description_en text,
  features jsonb DEFAULT '[]'::jsonb,
  is_active boolean DEFAULT true,
  sort_order integer DEFAULT 0,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  short_description_tr character varying,
  short_description_en character varying,
  image_url text,
  pricing_basic jsonb DEFAULT '{}'::jsonb,
  pricing_standard jsonb DEFAULT '{}'::jsonb,
  pricing_premium jsonb DEFAULT '{}'::jsonb,
  requirements_tr ARRAY,
  requirements_en ARRAY,
  is_featured boolean DEFAULT false,
  meta_title_tr character varying,
  meta_title_en character varying,
  meta_description_tr character varying,
  meta_description_en character varying,
  meta_keywords ARRAY,
  metadata jsonb DEFAULT '{}'::jsonb,
  updated_at timestamp with time zone DEFAULT now(),
  status text DEFAULT 'active'::text CHECK (status = ANY (ARRAY['active'::text, 'maintenance'::text, 'inactive'::text])),
  payment_type text DEFAULT 'recurring'::text CHECK (payment_type = ANY (ARRAY['recurring'::text, 'one-time'::text])),
  CONSTRAINT service_types_pkey PRIMARY KEY (id)
);
CREATE TABLE public.service_usage_metrics (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  company_id uuid NOT NULL,
  service_type_id uuid NOT NULL,
  metric_date date NOT NULL,
  total_requests integer DEFAULT 0,
  successful_requests integer DEFAULT 0,
  failed_requests integer DEFAULT 0,
  avg_response_time_ms numeric,
  p95_response_time_ms numeric,
  p99_response_time_ms numeric,
  bandwidth_used_gb numeric DEFAULT 0,
  compute_time_seconds integer DEFAULT 0,
  usage_percentage numeric DEFAULT 0,
  estimated_cost numeric DEFAULT 0,
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT service_usage_metrics_pkey PRIMARY KEY (id),
  CONSTRAINT service_usage_metrics_company_id_fkey FOREIGN KEY (company_id) REFERENCES public.companies(id),
  CONSTRAINT service_usage_metrics_service_type_id_fkey FOREIGN KEY (service_type_id) REFERENCES public.service_types(id)
);
CREATE TABLE public.sheets_access_log (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  company_id text NOT NULL,
  sheets_instance_id uuid,
  action_type text,
  action_by text,
  action_by_name text,
  action_by_role text,
  affected_worksheets ARRAY,
  rows_affected integer,
  query_executed text,
  success boolean,
  error_message text,
  ip_address text,
  user_agent text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT sheets_access_log_pkey PRIMARY KEY (id),
  CONSTRAINT sheets_access_log_sheets_instance_id_fkey FOREIGN KEY (sheets_instance_id) REFERENCES public.sheets_instances(id)
);
CREATE TABLE public.sheets_columns_mapping (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  company_id text NOT NULL,
  sheets_instance_id uuid,
  worksheet_name text NOT NULL,
  column_letter text NOT NULL,
  column_index integer,
  column_name text NOT NULL,
  column_type text NOT NULL,
  ai_aliases ARRAY,
  ai_description text,
  format_pattern text,
  is_searchable boolean DEFAULT true,
  is_filterable boolean DEFAULT true,
  search_weight integer DEFAULT 1,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT sheets_columns_mapping_pkey PRIMARY KEY (id),
  CONSTRAINT sheets_columns_mapping_sheets_instance_id_fkey FOREIGN KEY (sheets_instance_id) REFERENCES public.sheets_instances(id)
);
CREATE TABLE public.sheets_data_cache (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  company_id text NOT NULL,
  sheets_instance_id uuid,
  worksheet_name text NOT NULL,
  row_number integer,
  data_json jsonb NOT NULL,
  data_text text,
  sheet_row_id text,
  data_hash text,
  search_vector tsvector,
  synced_at timestamp with time zone DEFAULT now(),
  is_deleted boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT sheets_data_cache_pkey PRIMARY KEY (id),
  CONSTRAINT sheets_data_cache_sheets_instance_id_fkey FOREIGN KEY (sheets_instance_id) REFERENCES public.sheets_instances(id)
);
CREATE TABLE public.sheets_instances (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  company_id text NOT NULL,
  google_sheet_id text NOT NULL,
  google_sheet_name text,
  google_sheet_url text,
  google_service_account_email text,
  google_credentials_encrypted text,
  active_worksheets jsonb,
  data_mapping jsonb,
  auto_sync_enabled boolean DEFAULT true,
  sync_interval_minutes integer DEFAULT 15,
  last_sync_at timestamp with time zone,
  next_sync_at timestamp with time zone,
  whatsapp_integration_enabled boolean DEFAULT true,
  n8n_workflow_id text,
  n8n_webhook_url text,
  status text DEFAULT 'active'::text,
  error_message text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  created_by text,
  updated_by text,
  instance_name character varying DEFAULT 'Main Sheets'::character varying,
  CONSTRAINT sheets_instances_pkey PRIMARY KEY (id)
);
CREATE TABLE public.sheets_metrics (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  company_id text NOT NULL,
  metric_date date NOT NULL,
  total_queries integer DEFAULT 0,
  successful_queries integer DEFAULT 0,
  failed_queries integer DEFAULT 0,
  found_results integer DEFAULT 0,
  not_found_results integer DEFAULT 0,
  multiple_results integer DEFAULT 0,
  avg_query_duration_ms integer,
  avg_search_duration_ms integer,
  sync_count integer DEFAULT 0,
  rows_synced integer DEFAULT 0,
  top_queries jsonb,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT sheets_metrics_pkey PRIMARY KEY (id)
);
CREATE TABLE public.sheets_query_log (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  company_id text NOT NULL,
  sheets_instance_id uuid,
  whatsapp_customer_id text,
  whatsapp_session_id text,
  whatsapp_message_id text,
  customer_phone text NOT NULL,
  customer_name text,
  query_text text NOT NULL,
  query_intent text,
  query_language text DEFAULT 'tr'::text,
  ai_parsed_query jsonb,
  ai_confidence numeric,
  search_results jsonb,
  results_count integer DEFAULT 0,
  bot_response text,
  response_type text,
  n8n_execution_id text,
  query_duration_ms integer,
  search_duration_ms integer,
  status text DEFAULT 'completed'::text,
  error_message text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT sheets_query_log_pkey PRIMARY KEY (id),
  CONSTRAINT sheets_query_log_sheets_instance_id_fkey FOREIGN KEY (sheets_instance_id) REFERENCES public.sheets_instances(id)
);
CREATE TABLE public.sheets_query_templates (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  company_id text NOT NULL,
  template_name text NOT NULL,
  template_description text,
  trigger_keywords ARRAY,
  sample_questions ARRAY,
  response_template text,
  sheet_query jsonb,
  usage_count integer DEFAULT 0,
  last_used_at timestamp with time zone,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT sheets_query_templates_pkey PRIMARY KEY (id)
);
CREATE TABLE public.sheets_sync_history (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  company_id text NOT NULL,
  sheets_instance_id uuid,
  sync_type text,
  worksheet_name text,
  rows_synced integer DEFAULT 0,
  rows_added integer DEFAULT 0,
  rows_updated integer DEFAULT 0,
  rows_deleted integer DEFAULT 0,
  sync_duration_ms integer,
  status text,
  error_message text,
  error_details jsonb,
  started_at timestamp with time zone,
  completed_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT sheets_sync_history_pkey PRIMARY KEY (id),
  CONSTRAINT sheets_sync_history_sheets_instance_id_fkey FOREIGN KEY (sheets_instance_id) REFERENCES public.sheets_instances(id)
);
CREATE TABLE public.sheets_webhook_events (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  company_id text NOT NULL,
  sheets_instance_id uuid,
  event_type text,
  worksheet_name text,
  affected_rows jsonb,
  change_summary text,
  processed boolean DEFAULT false,
  processed_at timestamp with time zone,
  n8n_execution_id text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT sheets_webhook_events_pkey PRIMARY KEY (id),
  CONSTRAINT sheets_webhook_events_sheets_instance_id_fkey FOREIGN KEY (sheets_instance_id) REFERENCES public.sheets_instances(id)
);
CREATE TABLE public.support_messages (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  ticket_id uuid NOT NULL,
  sender_id uuid NOT NULL,
  message text NOT NULL,
  attachments ARRAY DEFAULT ARRAY[]::text[],
  is_internal boolean DEFAULT false,
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  edited_at timestamp with time zone,
  read_by ARRAY DEFAULT ARRAY[]::uuid[],
  CONSTRAINT support_messages_pkey PRIMARY KEY (id),
  CONSTRAINT support_messages_ticket_id_fkey FOREIGN KEY (ticket_id) REFERENCES public.support_tickets(id),
  CONSTRAINT support_messages_sender_id_fkey FOREIGN KEY (sender_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.support_sla_config (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  name character varying NOT NULL UNIQUE,
  description text,
  response_time_urgent integer NOT NULL DEFAULT 3600,
  response_time_high integer NOT NULL DEFAULT 14400,
  response_time_medium integer NOT NULL DEFAULT 28800,
  response_time_low integer NOT NULL DEFAULT 86400,
  resolution_time_urgent integer NOT NULL DEFAULT 14400,
  resolution_time_high integer NOT NULL DEFAULT 86400,
  resolution_time_medium integer NOT NULL DEFAULT 172800,
  resolution_time_low integer NOT NULL DEFAULT 432000,
  business_hours_start time without time zone DEFAULT '09:00:00'::time without time zone,
  business_hours_end time without time zone DEFAULT '18:00:00'::time without time zone,
  business_days ARRAY DEFAULT ARRAY[1, 2, 3, 4, 5],
  timezone character varying DEFAULT 'UTC'::character varying,
  warning_threshold integer DEFAULT 75,
  critical_threshold integer DEFAULT 90,
  is_active boolean DEFAULT true,
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT support_sla_config_pkey PRIMARY KEY (id)
);
CREATE TABLE public.support_sla_violations (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  ticket_id uuid NOT NULL,
  sla_config_id uuid NOT NULL,
  violation_type character varying NOT NULL,
  priority character varying NOT NULL,
  target_time integer NOT NULL,
  actual_time integer,
  time_remaining integer,
  status character varying DEFAULT 'pending'::character varying,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  violated_at timestamp with time zone,
  resolved_at timestamp with time zone,
  CONSTRAINT support_sla_violations_pkey PRIMARY KEY (id),
  CONSTRAINT support_sla_violations_sla_config_id_fkey FOREIGN KEY (sla_config_id) REFERENCES public.support_sla_config(id),
  CONSTRAINT support_sla_violations_ticket_id_fkey FOREIGN KEY (ticket_id) REFERENCES public.support_tickets(id)
);
CREATE TABLE public.support_templates (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name text NOT NULL,
  category text NOT NULL,
  subject_tr text,
  subject_en text,
  content_tr text NOT NULL,
  content_en text NOT NULL,
  is_active boolean DEFAULT true,
  usage_count integer DEFAULT 0,
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT support_templates_pkey PRIMARY KEY (id)
);
CREATE TABLE public.support_ticket_categories (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  name character varying NOT NULL UNIQUE,
  description text,
  icon character varying,
  color character varying,
  is_active boolean DEFAULT true,
  sort_order integer DEFAULT 0,
  parent_id uuid,
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT support_ticket_categories_pkey PRIMARY KEY (id),
  CONSTRAINT support_ticket_categories_parent_id_fkey FOREIGN KEY (parent_id) REFERENCES public.support_ticket_categories(id)
);
CREATE TABLE public.support_ticket_messages (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  ticket_id uuid NOT NULL,
  sender_id uuid NOT NULL,
  message text NOT NULL,
  is_internal boolean DEFAULT false,
  is_from_support boolean DEFAULT false,
  attachments jsonb DEFAULT '[]'::jsonb,
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT support_ticket_messages_pkey PRIMARY KEY (id),
  CONSTRAINT support_ticket_messages_sender_id_fkey FOREIGN KEY (sender_id) REFERENCES public.profiles(id),
  CONSTRAINT fk_ticket FOREIGN KEY (ticket_id) REFERENCES public.support_tickets(id),
  CONSTRAINT fk_sender FOREIGN KEY (sender_id) REFERENCES public.profiles(id),
  CONSTRAINT support_ticket_messages_ticket_id_fkey FOREIGN KEY (ticket_id) REFERENCES public.support_tickets(id),
  CONSTRAINT support_ticket_messages_sender_fkey FOREIGN KEY (sender_id) REFERENCES public.profiles(id),
  CONSTRAINT support_ticket_messages_ticket_fkey FOREIGN KEY (ticket_id) REFERENCES public.support_tickets(id)
);
CREATE TABLE public.support_tickets (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  company_id uuid NOT NULL,
  created_by uuid NOT NULL,
  ticket_number text NOT NULL UNIQUE,
  subject text NOT NULL,
  description text NOT NULL,
  category text CHECK (category = ANY (ARRAY['technical'::text, 'billing'::text, 'feature_request'::text, 'bug'::text, 'general'::text, 'urgent'::text])),
  priority text NOT NULL DEFAULT 'medium'::text CHECK (priority = ANY (ARRAY['low'::text, 'medium'::text, 'high'::text, 'urgent'::text])),
  status text NOT NULL DEFAULT 'open'::text CHECK (status = ANY (ARRAY['open'::text, 'in_progress'::text, 'waiting_customer'::text, 'resolved'::text, 'closed'::text])),
  assigned_to uuid,
  service_type_id uuid,
  resolution_notes text,
  satisfaction_rating integer CHECK (satisfaction_rating >= 1 AND satisfaction_rating <= 5),
  metadata jsonb DEFAULT '{}'::jsonb,
  tags ARRAY DEFAULT ARRAY[]::text[],
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  resolved_at timestamp with time zone,
  closed_at timestamp with time zone,
  first_response_at timestamp with time zone,
  response_time interval,
  resolution_time interval,
  category_id uuid,
  CONSTRAINT support_tickets_pkey PRIMARY KEY (id),
  CONSTRAINT support_tickets_company_id_fkey FOREIGN KEY (company_id) REFERENCES public.companies(id),
  CONSTRAINT support_tickets_service_type_id_fkey FOREIGN KEY (service_type_id) REFERENCES public.service_types(id),
  CONSTRAINT support_tickets_category_id_fkey FOREIGN KEY (category_id) REFERENCES public.support_ticket_categories(id),
  CONSTRAINT support_tickets_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.profiles(id),
  CONSTRAINT support_tickets_assigned_to_fkey FOREIGN KEY (assigned_to) REFERENCES public.profiles(id)
);
CREATE TABLE public.system_notifications (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  type character varying NOT NULL CHECK (type::text = ANY (ARRAY['success'::character varying, 'warning'::character varying, 'info'::character varying, 'maintenance'::character varying, 'service'::character varying]::text[])),
  title character varying NOT NULL,
  message text NOT NULL,
  icon character varying,
  action_url text,
  action_label character varying,
  target_audience character varying NOT NULL DEFAULT 'all'::character varying CHECK (target_audience::text = ANY (ARRAY['all'::character varying, 'super_admins'::character varying, 'company_admins'::character varying, 'users'::character varying, 'specific_companies'::character varying]::text[])),
  target_company_ids ARRAY,
  created_by uuid,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  expires_at timestamp with time zone,
  is_active boolean DEFAULT true,
  deleted_at timestamp with time zone,
  CONSTRAINT system_notifications_pkey PRIMARY KEY (id),
  CONSTRAINT system_notifications_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.profiles(id)
);
CREATE TABLE public.system_performance_metrics (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  metric_timestamp timestamp with time zone NOT NULL,
  total_requests integer DEFAULT 0,
  avg_response_time_ms numeric,
  error_rate numeric,
  db_connections integer DEFAULT 0,
  db_query_time_ms numeric,
  total_storage_used_gb numeric DEFAULT 0,
  storage_growth_gb numeric DEFAULT 0,
  active_users_1h integer DEFAULT 0,
  active_users_24h integer DEFAULT 0,
  services_status jsonb DEFAULT '{}'::jsonb,
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT system_performance_metrics_pkey PRIMARY KEY (id)
);
CREATE TABLE public.system_settings (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  key text NOT NULL UNIQUE,
  value jsonb NOT NULL,
  description text,
  category text,
  is_public boolean DEFAULT false,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  is_encrypted boolean DEFAULT false,
  last_updated_by uuid,
  CONSTRAINT system_settings_pkey PRIMARY KEY (id),
  CONSTRAINT system_settings_last_updated_by_fkey FOREIGN KEY (last_updated_by) REFERENCES public.profiles(id)
);
CREATE TABLE public.transactions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  invoice_id uuid NOT NULL,
  company_id uuid NOT NULL,
  gateway text NOT NULL CHECK (gateway = ANY (ARRAY['paytr'::text, 'stripe'::text, 'qtap'::text, 'manual'::text])),
  gateway_transaction_id text UNIQUE,
  amount numeric NOT NULL,
  currency text NOT NULL DEFAULT 'USD'::text CHECK (currency = 'USD'::text),
  status text NOT NULL DEFAULT 'pending'::text CHECK (status = ANY (ARRAY['pending'::text, 'processing'::text, 'success'::text, 'failed'::text, 'refunded'::text, 'cancelled'::text])),
  error_code text,
  error_message text,
  gateway_response jsonb,
  webhook_signature text,
  ip_address inet,
  user_agent text,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  processed_at timestamp with time zone,
  CONSTRAINT transactions_pkey PRIMARY KEY (id),
  CONSTRAINT transactions_invoice_id_fkey FOREIGN KEY (invoice_id) REFERENCES public.invoices(id),
  CONSTRAINT transactions_company_id_fkey FOREIGN KEY (company_id) REFERENCES public.companies(id)
);
CREATE TABLE public.user_invites (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  first_name text NOT NULL,
  last_name text NOT NULL,
  email text NOT NULL,
  company_id uuid NOT NULL,
  role text NOT NULL CHECK (role = ANY (ARRAY['user'::text, 'company_admin'::text])),
  status text DEFAULT 'sent'::text CHECK (status = ANY (ARRAY['sent'::text, 'accepted'::text, 'expired'::text])),
  invited_by uuid,
  invite_token text NOT NULL DEFAULT encode(gen_random_bytes(32), 'hex'::text) UNIQUE,
  temporary_password text,
  created_at timestamp with time zone DEFAULT now(),
  expires_at timestamp with time zone DEFAULT (now() + '7 days'::interval),
  accepted_at timestamp with time zone,
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT user_invites_pkey PRIMARY KEY (id),
  CONSTRAINT user_invites_company_id_fkey FOREIGN KEY (company_id) REFERENCES public.companies(id),
  CONSTRAINT user_invites_invited_by_fkey FOREIGN KEY (invited_by) REFERENCES public.profiles(id)
);
CREATE TABLE public.user_notifications (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  notification_id uuid NOT NULL,
  is_read boolean DEFAULT false,
  read_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT user_notifications_pkey PRIMARY KEY (id),
  CONSTRAINT user_notifications_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id),
  CONSTRAINT user_notifications_notification_id_fkey FOREIGN KEY (notification_id) REFERENCES public.system_notifications(id)
);
CREATE TABLE public.website_milestones (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  project_id uuid,
  title character varying NOT NULL,
  status character varying DEFAULT 'pending'::character varying CHECK (status::text = ANY (ARRAY['completed'::character varying, 'in-progress'::character varying, 'pending'::character varying, 'blocked'::character varying]::text[])),
  progress integer DEFAULT 0 CHECK (progress >= 0 AND progress <= 100),
  notes text,
  completed_date date,
  display_order integer DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT website_milestones_pkey PRIMARY KEY (id),
  CONSTRAINT website_milestones_project_id_fkey FOREIGN KEY (project_id) REFERENCES public.website_projects(id)
);
CREATE TABLE public.website_projects (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  company_id uuid,
  project_type character varying NOT NULL CHECK (project_type::text = ANY (ARRAY['e-commerce'::character varying, 'corporate'::character varying, 'personal'::character varying]::text[])),
  domain character varying,
  email character varying,
  estimated_completion date,
  overall_progress integer DEFAULT 0 CHECK (overall_progress >= 0 AND overall_progress <= 100),
  status character varying DEFAULT 'active'::character varying CHECK (status::text = ANY (ARRAY['active'::character varying, 'paused'::character varying, 'completed'::character varying, 'cancelled'::character varying]::text[])),
  last_update timestamp with time zone DEFAULT now(),
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  project_name character varying DEFAULT 'Main Website'::character varying,
  CONSTRAINT website_projects_pkey PRIMARY KEY (id),
  CONSTRAINT website_projects_company_id_fkey FOREIGN KEY (company_id) REFERENCES public.companies(id)
);
CREATE TABLE public.whatsapp_hourly_metrics (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  company_id uuid NOT NULL,
  metric_hour timestamp with time zone NOT NULL,
  total_messages integer DEFAULT 0,
  customer_messages integer DEFAULT 0,
  bot_messages integer DEFAULT 0,
  agent_messages integer DEFAULT 0,
  new_sessions integer DEFAULT 0,
  active_sessions integer DEFAULT 0,
  avg_response_time interval,
  messages_per_session numeric,
  positive_sentiment integer DEFAULT 0,
  neutral_sentiment integer DEFAULT 0,
  negative_sentiment integer DEFAULT 0,
  intents jsonb DEFAULT '{}'::jsonb,
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT whatsapp_hourly_metrics_pkey PRIMARY KEY (id),
  CONSTRAINT whatsapp_hourly_metrics_company_id_fkey FOREIGN KEY (company_id) REFERENCES public.companies(id)
);
CREATE TABLE public.whatsapp_instances (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  company_id uuid,
  instance_id character varying NOT NULL UNIQUE,
  instance_name character varying,
  phone_number character varying,
  status character varying DEFAULT 'active'::character varying,
  qr_code text,
  is_connected boolean DEFAULT false,
  last_connected_at timestamp without time zone,
  webhook_url text,
  api_key text,
  settings jsonb,
  created_at timestamp without time zone DEFAULT now(),
  updated_at timestamp without time zone DEFAULT now(),
  CONSTRAINT whatsapp_instances_pkey PRIMARY KEY (id),
  CONSTRAINT whatsapp_instances_company_id_fkey FOREIGN KEY (company_id) REFERENCES public.companies(id)
);
CREATE TABLE public.whatsapp_messages (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  company_id uuid NOT NULL,
  session_id uuid NOT NULL,
  user_id uuid NOT NULL,
  sender text NOT NULL CHECK (sender = ANY (ARRAY['customer'::text, 'bot'::text, 'agent'::text])),
  sender_name text,
  message_body text NOT NULL,
  message_owner text NOT NULL,
  message_type text DEFAULT 'text'::text CHECK (message_type = ANY (ARRAY['text'::text, 'image'::text, 'audio'::text, 'video'::text, 'document'::text, 'location'::text])),
  media_url text,
  instance_id text,
  sentiment text,
  intent text,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT whatsapp_messages_pkey PRIMARY KEY (id),
  CONSTRAINT whatsapp_messages_company_id_fkey FOREIGN KEY (company_id) REFERENCES public.companies(id),
  CONSTRAINT whatsapp_messages_session_id_fkey FOREIGN KEY (session_id) REFERENCES public.whatsapp_sessions(id),
  CONSTRAINT whatsapp_messages_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.whatsapp_user_profiles(id)
);
CREATE TABLE public.whatsapp_metrics (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  company_id uuid NOT NULL,
  metric_date date NOT NULL,
  total_messages integer DEFAULT 0,
  customer_messages integer DEFAULT 0,
  bot_messages integer DEFAULT 0,
  agent_messages integer DEFAULT 0,
  new_sessions integer DEFAULT 0,
  active_sessions integer DEFAULT 0,
  resolved_sessions integer DEFAULT 0,
  avg_response_time interval,
  avg_session_duration interval,
  satisfaction_score numeric,
  resolved_rate numeric,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT whatsapp_metrics_pkey PRIMARY KEY (id),
  CONSTRAINT whatsapp_metrics_company_id_fkey FOREIGN KEY (company_id) REFERENCES public.companies(id)
);
CREATE TABLE public.whatsapp_sessions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  company_id uuid NOT NULL,
  user_id uuid NOT NULL,
  sender text NOT NULL,
  session_start timestamp with time zone DEFAULT now(),
  session_end timestamp with time zone,
  is_active boolean DEFAULT true,
  context jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  last_message text,
  last_message_time timestamp without time zone,
  unread_count integer DEFAULT 0,
  message_count integer DEFAULT 0,
  customer_name character varying,
  customer_phone character varying,
  status character varying DEFAULT 'active'::character varying CHECK (status::text = ANY (ARRAY['active'::character varying, 'closed'::character varying, 'archived'::character varying]::text[])),
  CONSTRAINT whatsapp_sessions_pkey PRIMARY KEY (id),
  CONSTRAINT whatsapp_sessions_company_id_fkey FOREIGN KEY (company_id) REFERENCES public.companies(id),
  CONSTRAINT whatsapp_sessions_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.whatsapp_user_profiles(id)
);
CREATE TABLE public.whatsapp_user_profiles (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  company_id uuid NOT NULL,
  phone_number text NOT NULL,
  name text,
  email text,
  preferences jsonb DEFAULT '{}'::jsonb,
  tags ARRAY DEFAULT ARRAY[]::text[],
  total_messages integer DEFAULT 0,
  last_seen timestamp with time zone,
  customer_status text DEFAULT 'new'::text CHECK (customer_status = ANY (ARRAY['new'::text, 'active'::text, 'inactive'::text, 'blocked'::text])),
  notes text,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT whatsapp_user_profiles_pkey PRIMARY KEY (id),
  CONSTRAINT whatsapp_user_profiles_company_id_fkey FOREIGN KEY (company_id) REFERENCES public.companies(id)
);